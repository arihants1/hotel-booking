server:
  port: 8082

spring:
  application:
    name: hrs-booking-service

  datasource:
    url: jdbc:postgresql://localhost:5432/hotel_booking
    username: postgres
    password: postgres123
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 25
      minimum-idle: 5
      idle-timeout: 300000
      connection-timeout: 20000
      max-lifetime: 1200000
      leak-detection-threshold: 60000

  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        jdbc:
          batch_size: 25
        order_inserts: true
        order_updates: true
        cache:
          use_second_level_cache: false

  cache:
    type: redis
    redis:
      cache-null-values: false
      time-to-live: 600000  # 10 minutes
      key-prefix: "hrs:hotel:"
  data:
    redis:
      host: localhost
      port: 6380
      password: redis_password_2025
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 15
          max-idle: 8
          min-idle: 3
          max-wait: 2000ms

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,caches,httptrace
  endpoint:
    health:
      show-details: always
  metrics:
    export:
      prometheus:
        enabled: true
    tags:
      service: hrs-booking-service
      version: 1.0.0
      environment: ${SPRING_PROFILES_ACTIVE:development}

logging:
  level:
    com.hrs.hotelbooking.hotel: DEBUG
    org.hibernate.SQL: INFO
    org.springframework.cache: DEBUG
    org.springframework.data.redis: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{traceId:-},%X{spanId:-}] %logger{36} - %msg%n"

# HRS-specific configuration
hrs:
  hotel:
    search:
      default-page-size: 20
      max-page-size: 100
      cache-ttl: 600 # 10 minutes
    availability:
      calculation-enabled: true
      cache-ttl: 300 # 5 minutes
    performance:
      async-processing: true
      batch-size: 25
  elasticsearch:
    batch-size: 100
  services:
    hotel-service:
      url: http://localhost:8081
      connect-timeout: 5000
      read-timeout: 5000
      retry-max-attempts: 3
